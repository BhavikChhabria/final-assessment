- hosts: all
  become: yes
  tasks:
    - name: Fail if OS is not Ubuntu 20.04, 22.04, or 24.04
      fail:
        msg: "OS should be Ubuntu 20.04, 22.04, or 24.04, not {{ ansible_distribution }} {{ ansible_distribution_version }}"
      when: ansible_distribution != 'Ubuntu' or ansible_distribution_version not in ['20.04', '22.04', '24.04']

    - name: Update APT packages
      apt:
        update_cache: yes

    - name: Reboot and wait for reboot to complete
      reboot:

    - name: Disable SWAP (Kubeadm requirement)
      shell: swapoff -a

    - name: Disable SWAP in fstab (Kubeadm requirement)
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

    - name: Configure Containerd module
      blockinfile:
        path: /etc/modules-load.d/containerd.conf
        block: |
          overlay
          br_netfilter

    - name: Configure Kubernetes sysctl params
      blockinfile:
        path: /etc/sysctl.d/99-kubernetes-cri.conf
        block: |
          net.bridge.bridge-nf-call-iptables=1
          net.ipv4.ip_forward=1
          net.bridge.bridge-nf-call-ip6tables=1

    - name: Apply sysctl params without reboot
      command: sysctl --system

    - name: Install APT Transport HTTPS
      apt:
        name: apt-transport-https
        state: present

    # - name: Add Docker apt-key
    #   apt_key:
    #     url: https://download.docker.com/linux/ubuntu/gpg
    #     state: present



    # - name: Add Docker's APT repository
    #   apt_repository:
    #     repo: "deb [arch={{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }} signed-by=/etc/apt/keyrings/docker-apt-keyring.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    #     state: present
    #     update_cache: yes

    - name: Add Kubernetes apt-key
      get_url:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc
        mode: '0644'
        force: true

    - name: Add Kubernetes' APT repository
      apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
        state: present
        update_cache: yes

    - name: Install Containerd
      apt:
        name: containerd.io
        state: present

    - name: Create Containerd directory
      file:
        path: /etc/containerd
        state: directory

    - name: Add Containerd configuration
      shell: /usr/bin/containerd config default > /etc/containerd/config.toml

    - name: Configure systemd cgroup driver for Containerd
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        line: 'SystemdCgroup = true'

    - name: Enable and start the Containerd service
      systemd:
        name: containerd
        state: restarted
        enabled: yes
        daemon-reload: yes

    - name: Install Kubelet
      apt:
        name: kubelet=1.29.*
        state: present
        update_cache: true

    - name: Install Kubeadm
      apt:
        name: kubeadm=1.29.*
        state: present

    - name: Enable the Kubelet service
      service:
        name: kubelet
        enabled: yes

    - name: Load br_netfilter kernel module
      modprobe:
        name: br_netfilter
        state: present

    - name: Set bridge-nf-call-iptables
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1

    - name: Set ip_forward
      sysctl:
        name: net.ipv4.ip_forward
        value: 1

    - name: Reboot and wait for reboot to complete
      reboot:
